// ===================================================
// 문제: 동전 교환하기 (그리디 알고리즘)
// ===================================================
// 문제 설명:
// 당신은 편의점 점원입니다. 손님에게 거슬러 줘야 할 금액이 n원일 때, 가장 적은 수의 동전으로 거슬러 주려고 합니다.
// 사용할 수 있는 동전은 500원, 100원, 50원, 10원이며, 각 동전은 무한히 많다고 가정합니다.
// 거슬러 줘야 할 금액 n이 주어졌을 때, 최소 동전 개수를 구하세요.
//
// 제한 사항:
// - 거슬러 줘야 할 금액 n (1 ≤ n ≤ 100,000)
// - n은 항상 10의 배수입니다.
//
// 입출력 예시:
// 입력: 1260
// 출력: 6 (500원 2개, 100원 2개, 50원 1개, 10원 1개)
// ===================================================

// 함수 설명: 거슬러 줘야 할 금액 n을 입력받아 최소 동전 개수를 반환합니다.
// n: 거슬러 줘야 할 금액 (10의 배수)
// 반환값: 최소 동전 개수
int minCoins(int n) {
  List<int> coins = [500, 100, 50, 10];
  int count = 0;

  for (int coin in coins) {
    int coinCount = n ~/ coin;

    count += coinCount;

    n -= coinCount * coin;
  }
  return count; // 이 부분을 수정하세요
}

// 테스트 코드
void main() {
  print(minCoins(1260)); // 예상 출력: 6
  print(minCoins(3720)); // 예상 출력: 11
  print(minCoins(160)); // 예상 출력: 3
}
